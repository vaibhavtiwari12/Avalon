{"version":3,"sources":["Components/Blog/BlogForm.js","Components/Blog/BlogTable.jsx","Components/Blog/Blog.jsx","Components/Header.jsx","Components/Home.jsx","App.js","reportWebVitals.js","Store/fetchDataReducer.js","Components/Blog/BlogReducer.js","Store/reducer.js","index.js"],"names":["BlogForm","useState","title","setTitle","body","setBody","date","setDate","isTitleValid","setIsTitleValid","isBodyValid","setIsBodyValid","isDateValid","setIsDateValid","hasError","setHasError","dispatch","useDispatch","clear","Form","onSubmit","e","preventDefault","console","log","formData","fetch","method","JSON","stringify","headers","then","res","json","type","data","_id","submit","Alert","color","FormGroup","Label","for","Input","invalid","name","value","onChange","target","length","titleChange","FormFeedback","bodyChange","dateChange","Button","className","onClick","BlogTable","content","useSelector","state","BlogReducer","posts","getPosts","useEffect","Table","striped","size","map","post","id","Blog","Header","props","Home","message","setMessage","fetchDataReducer","process","ok","Error","statusText","catch","style","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","action","concat","createRootReducer","history","combineReducers","router","connectRouter","createBrowserHistory","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","routerMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.db5de31d.chunk.js","sourcesContent":["import {Form, FormGroup, Label, Input, Button,FormFeedback, Alert} from 'reactstrap';\r\nimport {useState} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nconst BlogForm = () => {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [body, setBody] = useState(\"\");\r\n    const [date, setDate] = useState(\"\");\r\n    const [isTitleValid, setIsTitleValid] = useState(\"PRISTINE\");\r\n    const [isBodyValid, setIsBodyValid] = useState(\"PRISTINE\");    \r\n    const [isDateValid, setIsDateValid] = useState(\"PRISTINE\");\r\n    const [hasError, setHasError] = useState(false)\r\n    const dispatch = useDispatch();\r\n\r\n    const titleChange = (e) => {\r\n        setTitle(e.target.value)\r\n        if(e.target.value.length<=0) setIsTitleValid(\"INVALID\"); else setIsTitleValid(\"VALID\");\r\n        if(e.target.value && body && date)  setHasError(false);\r\n    }\r\n    const bodyChange = (e) => {\r\n        setBody(e.target.value)\r\n        if(e.target.value.length<=0) setIsBodyValid(\"INVALID\"); else setIsBodyValid(\"VALID\")\r\n        if(title && e.target.value && date)  setHasError(false);\r\n    }\r\n    const dateChange = (e) => {\r\n        setDate(e.target.value)\r\n        if(e.target.value.length<=0) setIsDateValid(\"INVALID\"); else setIsDateValid(\"VALID\")\r\n        if(title && body && e.target.value)  setHasError(false);\r\n    }\r\n    const clear = () => {\r\n        setTitle(\"\");\r\n        setBody(\"\");\r\n        setDate(\"\");\r\n        setHasError(false);\r\n        setIsBodyValid(\"PRISTINE\");\r\n        setIsTitleValid(\"PRISTINE\");\r\n        setIsDateValid(\"PRISTINE\");\r\n    }\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        if(isTitleValid==\"VALID\" && isBodyValid==\"VALID\" && isDateValid==\"VALID\")  {\r\n            console.log(title);\r\n            console.log(body);\r\n            console.log(date);\r\n\r\n            const formData = {title,body,date}\r\n            fetch(\"/mongo/add\",{\r\n                method:'POST',\r\n                body:JSON.stringify(formData),\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                  },\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                console.log(\"Res\", res);\r\n                dispatch({\r\n                    type:\"UPDATE_BLOG\",\r\n                    data: {\r\n                       _id: res._id,title: res.title, body:res.body,date:res.date\r\n                    }\r\n                  })\r\n                  clear();\r\n            });\r\n        }else {\r\n            setHasError(true)\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={e=>submit(e)}> \r\n            {hasError && <Alert color=\"danger\">FORM HAS AN ERROR</Alert>}\r\n            <FormGroup>\r\n                <Label for=\"title\">Title</Label>\r\n                <Input invalid={isTitleValid === \"INVALID\"} name=\"title\" type=\"text\" value={title} onChange={e=>titleChange(e)}/>\r\n                <FormFeedback>Title is required.</FormFeedback>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label for=\"body\">Body</Label>\r\n                <Input invalid={isBodyValid === \"INVALID\"} name=\"body\" type=\"text\" value={body} onChange={e => bodyChange(e)}/>\r\n                <FormFeedback>Body is required</FormFeedback>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label for=\"Date\">Date</Label>\r\n                <Input invalid={isDateValid === \"INVALID\"} name=\"Date\" type=\"Date\" value={date} onChange={e => dateChange(e)}/>\r\n                <FormFeedback>Date is required</FormFeedback>\r\n            </FormGroup>\r\n                <Button type=\"submit\" color=\"primary\">Add Post</Button>\r\n                <Button type=\"reset\" color=\"danger\" className=\"ms-1\" onClick={clear}>Reset</Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default BlogForm;","import {Table, Button} from 'reactstrap';\r\nimport { useState, useEffect } from 'react';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\n\r\nconst BlogTable = () => {\r\n    const content = useSelector(state => state.BlogReducer);\r\n    const dispatch = useDispatch();\r\n    const posts = content.posts;\r\n\r\n    const getPosts = () => {\r\n        fetch(\"/mongo/get\")\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            console.log(res);\r\n            dispatch({\r\n                type: \"ADD_BLOGS\",\r\n                data:res\r\n            })\r\n        })\r\n    }\r\n    \r\n    useEffect(() => {\r\n        getPosts()\r\n    },[]);\r\n    \r\n    const deletePost = (id) => {\r\n        fetch(`/mongo/delete/${id}`).then(()=>{\r\n            getPosts();\r\n        })\r\n    }\r\n    return (\r\n        <div>  \r\n            <Table striped size='lg' className=\"\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Title</th>\r\n                        <th>Body</th>\r\n                        <th>Date</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {posts.length>0 && posts.map((post) => {\r\n                        return <tr key={post._id}>\r\n                                    <td>{post._id}</td>\r\n                                    <td>{post.title}</td>\r\n                                    <td>{post.body}</td>\r\n                                    <td>{post.date/* new Date(.toString()) */}</td>\r\n                                    <td><Button color=\"danger\" size=\"sm\" onClick={() => deletePost(post._id)}>Delete</Button></td>\r\n                                </tr>\r\n                        })  \r\n                    }\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogTable;","import BlogForm from './BlogForm';\r\nimport {Alert} from 'reactstrap';\r\nimport BlogTable from './BlogTable';\r\nconst Blog = () => {\r\n    return (\r\n        <div >\r\n            <Alert color=\"primary\">\r\n                <h1 className=\"text-center\"> Vaibhav's Blog</h1>          \r\n            </Alert>\r\n            <BlogForm />\r\n            <BlogTable/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Blog;","const Header = (props) => {\r\n    return (\r\n        <div>\r\n            HEADER\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import {useEffect, useState} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst Home = () => {\r\n  const [message, setMessage] = useState('');\r\n  const dispatch = useDispatch();\r\n  const content = useSelector(state => state.fetchDataReducer);\r\n\r\n  //REDUX TESTING\r\n  const getData = () => {\r\n    console.log(\"Process ENV\", process.env);\r\n    fetch(\"https://jsonplaceholder.typicode.com/todos/1\")\r\n    .then(res =>{\r\n        if(!res.ok){\r\n            throw Error (res.statusText)\r\n        }else{\r\n            return res.json()\r\n        }\r\n    }) \r\n    .then(res => {\r\n      dispatch({\r\n        type:\"FETCH_DATA\",\r\n        data: res\r\n      })\r\n    })\r\n    .catch(e => {\r\n      dispatch ({\r\n        type:\"FETCH_DATA_ERROR\",\r\n        data: e\r\n      })\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(`/api/getName`)\r\n    .then(res => res.json())\r\n    .then(res => {\r\n        setMessage(res.message);\r\n        //CALLING REDUX FUNCTION\r\n        getData();\r\n        console.log(content)\r\n    })\r\n  }, [])\r\nreturn (\r\n\r\n    <div>\r\n        <h2>API CALL to Node/Express Backend. You see \" hello from API if connected.\" </h2>\r\n        <div> {message? message : \"No Message received.\"}</div>\r\n        <br/>      <br/>      <br/>\r\n        <h2>REDUX STORE WITH THUNK MIDDLEWARE - you see data below if working</h2>\r\n        \r\n        {\r\n            content.data ? (\r\n            <div>\r\n                <p><strong>ID:</strong> {content.data.id}</p>\r\n                <p><strong>Title: </strong>{content.data.title}</p>\r\n            \r\n            </div>\r\n            ):<div style={{color: \"red\"}}>Error occured while fetching the data</div>\r\n\r\n        }\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Home;","\nimport {Switch,Route} from \"react-router-dom\";\nimport './App.css';\nimport Blog from \"./Components/Blog/Blog\";\nimport Header from './Components/Header';\nimport Home from \"./Components/Home\";\n\nfunction App() {\n  \n  return (\n      <Switch>\n          <Route exact path='/' component={Home}></Route>\n          <Route exact path='/Header' component={Header}></Route>\n          <Route exact path='/Blog' component={Blog}></Route>\n      </Switch>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const fetchDataReducer = (state = {data:\"\"}, action) => {\r\n    switch(action.type){\r\n        case \"FETCH_DATA\" : \r\n            return {\r\n                ...state,\r\n                data: action.data\r\n            }\r\n        case \"FETCH_DATA_ERROR\" : {\r\n            return {\r\n                ...state,\r\n                data: \"\"\r\n            }\r\n        }\r\n        default : return state\r\n    }\r\n}\r\n\r\nexport default fetchDataReducer;","const BlogReducer = (state = {posts:[]}, action) => {\r\n    switch(action.type){\r\n        case \"UPDATE_BLOG\" : \r\n        console.log(\"ACTION.DATA\",action.data)\r\n            return {\r\n                ...state,\r\n                posts:state.posts.concat(action.data)\r\n            }\r\n        case \"ADD_BLOGS\" : \r\n            return {\r\n                ...state,\r\n                posts:action.data\r\n            }\r\n        default : return state\r\n    }\r\n}\r\n\r\nexport default BlogReducer;","import { combineReducers } from \"redux\";\r\nimport {connectRouter } from 'connected-react-router';\r\nimport fetchDataReducer from \"./fetchDataReducer\";\r\nimport BlogReducer from \"../Components/Blog/BlogReducer\";\r\n\r\nconst createRootReducer = (history) => combineReducers({\r\n    router: connectRouter(history),\r\n    fetchDataReducer,\r\n    BlogReducer\r\n})\r\n\r\nexport default createRootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n//Imports for Redux and Redux thunk\nimport {createStore, applyMiddleware, compose} from \"redux\";\nimport { Provider } from 'react-redux'\nimport thunk from \"redux-thunk\";\n\n\n//Imports for Router \nimport { createBrowserHistory } from 'history';\nimport { routerMiddleware, ConnectedRouter } from 'connected-react-router';\nimport createRootReducer from './Store/reducer';\n\n\nexport const history = createBrowserHistory();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n/* const store = createStore(reducer, composeEnhancers(applyMiddleware(thunk))); */\nconst store = createStore(createRootReducer(history),\n                composeEnhancers(applyMiddleware(thunk,routerMiddleware(history))))\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      \n        <App/>\n      \n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}